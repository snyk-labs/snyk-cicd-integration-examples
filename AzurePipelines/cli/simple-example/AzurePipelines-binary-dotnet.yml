# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  - master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
  - task: NuGetToolInstaller@1
  - task: DotNetCoreInstaller@1


  # DO YOUR DONET BUILD HERE
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      feedsToUse: 'select'

  - script: |
      curl -Lo ./snyk.exe "https://static.snyk.io/cli/latest/snyk-win.exe"
      chmod +x snyk.exe
      ls -la
      snyk.exe -v
    displayName: 'Snyk install'
  - script: |
      curl -Lo ./snyk-to-html.exe "https://static.snyk.io/snyk-to-html/latest/snyk-to-html-win.exe"
      chmod +x snyk-to-html.exe
      ls -la
    displayName: 'Snyk to html install'


  # DO YOUR SCANNING HERE WITH SNYK
  # create variable in Pipelines called 'SNYK_TOKEN' and securely save your Snyk token value
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
  - script: |
      snyk.exe auth $(SNYK_TOKEN)
      snyk.exe test --json | snyk-to-html.exe -o results.html
      ls -la
      cd
    displayName: 'Snyk test'
  # CELEBRATE
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: 'results.html'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'


  - publish: $(System.DefaultWorkingDirectory)/results.html
    artifact: Results.html
